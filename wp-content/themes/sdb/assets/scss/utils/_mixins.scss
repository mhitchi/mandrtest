//==== Example: @include css-triangle ("up", 10px, #fff);
@mixin css-triangle(
    $direction: 'down',
    $width: 20px,
    $height: 30px,
    $color: #000
) {
    width: 0;
    height: 0;
    border-left: $width solid #{setTriangleColor($direction, 'left', $color)};
    border-right: $width solid #{setTriangleColor($direction, 'right', $color)};
    border-bottom: $height solid #{setTriangleColor(
            $direction,
            'bottom',
            $color
        )};
    border-top: $height solid #{setTriangleColor($direction, 'top', $color)};
}

//Utility function to return the relevant colour depending on what type of arrow it is
@function setTriangleColor($direction, $side, $color) {
    @if $direction ==
        'left' and
        $side ==
        'right' or
        $direction ==
        'right' and
        $side ==
        'left' or
        $direction ==
        'down' and
        $side ==
        'top' or
        $direction ==
        'up' and
        $side ==
        'bottom'
    {
        @return $color;
    } @else {
        @return 'transparent';
    }
}

@mixin placeholder($color: $text-color, $alpha: 0.8) {
    &::-webkit-input-placeholder {
        color: rgba($color, $alpha);
    } /* WebKit browsers */

    &:-moz-placeholder {
        color: rgba($color, 1);
    } /* Mozilla Firefox 4 to 18 */

    &::-moz-placeholder {
        color: rgba($color, 1);
    } /* Mozilla Firefox 19+ */

    &:-ms-input-placeholder {
        color: rgba($color, $alpha);
    } /* Internet Explorer 10+ */
}

// em size
$doc-font-size: 16;
@function em($size) {
    @return #{$size / $doc-font-size}em;
}

@mixin section-spacing( $top_space: 'med', $bottom_space: '' ){
    // Set top padding
    @if $top_space == 'lg' 
    {
        $top_space: $spacing-lg;
    } 
    @else if $top_space == 'xl' 
    {
        $top_space: $spacing-xl;
    }
    @else {
        $top_space: $spacing-med;
    }

    // Set bottom padding
    @if $bottom_space == 'lg' 
    {
        $bottom_space: $spacing-lg;
    } 
    @else if $bottom_space == 'xl' 
    {
        $bottom_space: $spacing-xl;
    }
    @else if $bottom_space == 'med' 
    {
        $bottom_space: $spacing-med;
    }
    @else {
        $bottom_space: $top_space;
    }

    // Apply padding
    padding-top: $top_space;
    padding-bottom: $bottom_space;
}

@mixin responsive-spacing(){
    @media (max-width: $mobile-break-max){
        padding-top: $spacing-med;
        padding-bottom: $spacing-med;
    }
}
